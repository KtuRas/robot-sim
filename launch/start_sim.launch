<launch>

  <arg name="mode" default="train"/>            <!--if you are making test with pretrained model make it test  -->
  <arg name="joy" default="false"/>             <!--if you are using joystick make it true> -->
  <arg name="model" default="waffle"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <group if="$(eval mode == 'train')">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_sim)/worlds/train_world.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <node pkg="joy" type="joy_node" name="joy_node" if="$(arg joy)" /> 
    <node pkg="robot_sim" type="my_joy.py" name="my_joystick" if="$(arg joy)" />

  </group>

  <group if="$(eval mode == 'test')">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_sim)/worlds/test_world.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <node pkg="robot_sim" type="my_predict.py" name="my_predict" args="$(find robot_sim)/scripts/my_files" output="screen"/>
  </group>


  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

</launch>
